{"version":3,"sources":["webpack:///./node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack:///./node_modules/@babel/runtime/helpers/iterableToArray.js","webpack:///./node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","webpack:///./node_modules/semantic-ui-react/dist/es/elements/Button/ButtonContent.js","webpack:///./node_modules/semantic-ui-react/dist/es/elements/Button/ButtonGroup.js","webpack:///./node_modules/semantic-ui-react/dist/es/elements/Button/ButtonOr.js","webpack:///./node_modules/semantic-ui-react/dist/es/elements/Button/Button.js","webpack:///./src/pages/index.tsx","webpack:///./node_modules/@babel/runtime/helpers/toConsumableArray.js"],"names":["module","exports","TypeError","iter","Symbol","iterator","Object","prototype","toString","call","Array","from","arr","isArray","i","arr2","length","ButtonContent","props","children","className","content","hidden","visible","classes","rest","getUnhandledProps","ElementType","getElementType","createElement","isNil","handledProps","propTypes","ButtonGroup","attached","basic","buttons","color","compact","floated","fluid","icon","inverted","labeled","negative","positive","primary","secondary","size","toggle","vertical","widths","button","create","ButtonOr","text","_Component","Button","_getPrototypeOf2","_this","this","_len","arguments","args","_key","apply","concat","_this$props","label","_this$props2","disabled","tabIndex","ref","current","e","preventDefault","_this$props3","labelPosition","key","value","role","_this$props4","active","animated","circular","loading","baseClasses","hasIconClass","labeledClasses","wrapperClasses","computeElementType","computeTabIndex","buttonClasses","containerClasses","labelElement","Label","defaultProps","pointing","autoGenerateKey","onClick","handleClick","Ref","innerRef","undefined","Icon","hasChildren","computeButtonAriaRole","as","withLayout","Segment","textAlign","HeaderMenu","Link","pathname","location","items","menuItems","Container","Header","class","window","open","console","log","arrayWithoutHoles","iterableToArray","nonIterableSpread"],"mappings":"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","file":"component---src-pages-index-tsx-6db94d6962be69dc46c3.js","sourcesContent":["function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nmodule.exports = _nonIterableSpread;","function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;","function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n\nmodule.exports = _arrayWithoutHoles;","import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, useKeyOnly } from '../../lib';\n/**\n * Used in some Button types, such as `animated`.\n */\n\nfunction ButtonContent(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      hidden = props.hidden,\n      visible = props.visible;\n  var classes = cx(useKeyOnly(visible, 'visible'), useKeyOnly(hidden, 'hidden'), 'content', className);\n  var rest = getUnhandledProps(ButtonContent, props);\n  var ElementType = getElementType(ButtonContent, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nButtonContent.handledProps = [\"as\", \"children\", \"className\", \"content\", \"hidden\", \"visible\"];\nButtonContent.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Initially hidden, visible on hover. */\n  hidden: PropTypes.bool,\n\n  /** Initially visible, hidden on hover. */\n  visible: PropTypes.bool\n} : {};\nexport default ButtonContent;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _map from \"lodash/map\";\nimport _isNil from \"lodash/isNil\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useKeyOrValueAndKey, useValueAndKey, useWidthProp } from '../../lib';\nimport Button from './Button';\n/**\n * Buttons can be grouped.\n */\n\nfunction ButtonGroup(props) {\n  var attached = props.attached,\n      basic = props.basic,\n      buttons = props.buttons,\n      children = props.children,\n      className = props.className,\n      color = props.color,\n      compact = props.compact,\n      content = props.content,\n      floated = props.floated,\n      fluid = props.fluid,\n      icon = props.icon,\n      inverted = props.inverted,\n      labeled = props.labeled,\n      negative = props.negative,\n      positive = props.positive,\n      primary = props.primary,\n      secondary = props.secondary,\n      size = props.size,\n      toggle = props.toggle,\n      vertical = props.vertical,\n      widths = props.widths;\n  var classes = cx('ui', color, size, useKeyOnly(basic, 'basic'), useKeyOnly(compact, 'compact'), useKeyOnly(fluid, 'fluid'), useKeyOnly(icon, 'icon'), useKeyOnly(inverted, 'inverted'), useKeyOnly(labeled, 'labeled'), useKeyOnly(negative, 'negative'), useKeyOnly(positive, 'positive'), useKeyOnly(primary, 'primary'), useKeyOnly(secondary, 'secondary'), useKeyOnly(toggle, 'toggle'), useKeyOnly(vertical, 'vertical'), useKeyOrValueAndKey(attached, 'attached'), useValueAndKey(floated, 'floated'), useWidthProp(widths), 'buttons', className);\n  var rest = getUnhandledProps(ButtonGroup, props);\n  var ElementType = getElementType(ButtonGroup, props);\n\n  if (_isNil(buttons)) {\n    return React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), childrenUtils.isNil(children) ? content : children);\n  }\n\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), _map(buttons, function (button) {\n    return Button.create(button);\n  }));\n}\n\nButtonGroup.handledProps = [\"as\", \"attached\", \"basic\", \"buttons\", \"children\", \"className\", \"color\", \"compact\", \"content\", \"floated\", \"fluid\", \"icon\", \"inverted\", \"labeled\", \"negative\", \"positive\", \"primary\", \"secondary\", \"size\", \"toggle\", \"vertical\", \"widths\"];\nButtonGroup.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Groups can be attached to other content. */\n  attached: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['left', 'right', 'top', 'bottom'])]),\n\n  /** Groups can be less pronounced. */\n  basic: PropTypes.bool,\n\n  /** Array of shorthand Button values. */\n  buttons: customPropTypes.collectionShorthand,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Groups can have a shared color. */\n  color: PropTypes.oneOf(SUI.COLORS),\n\n  /** Groups can reduce their padding to fit into tighter spaces. */\n  compact: PropTypes.bool,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Groups can be aligned to the left or right of its container. */\n  floated: PropTypes.oneOf(SUI.FLOATS),\n\n  /** Groups can take the width of their container. */\n  fluid: PropTypes.bool,\n\n  /** Groups can be formatted as icons. */\n  icon: PropTypes.bool,\n\n  /** Groups can be formatted to appear on dark backgrounds. */\n  inverted: PropTypes.bool,\n\n  /** Groups can be formatted as labeled icon buttons. */\n  labeled: PropTypes.bool,\n\n  /** Groups can hint towards a negative consequence. */\n  negative: PropTypes.bool,\n\n  /** Groups can hint towards a positive consequence. */\n  positive: PropTypes.bool,\n\n  /** Groups can be formatted to show different levels of emphasis. */\n  primary: PropTypes.bool,\n\n  /** Groups can be formatted to show different levels of emphasis. */\n  secondary: PropTypes.bool,\n\n  /** Groups can have different sizes. */\n  size: PropTypes.oneOf(SUI.SIZES),\n\n  /** Groups can be formatted to toggle on and off. */\n  toggle: PropTypes.bool,\n\n  /** Groups can be formatted to appear vertically. */\n  vertical: PropTypes.bool,\n\n  /** Groups can have their widths divided evenly. */\n  widths: PropTypes.oneOf(SUI.WIDTHS)\n} : {};\nexport default ButtonGroup;","import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { customPropTypes, getElementType, getUnhandledProps } from '../../lib';\n/**\n * Button groups can contain conditionals.\n */\n\nfunction ButtonOr(props) {\n  var className = props.className,\n      text = props.text;\n  var classes = cx('or', className);\n  var rest = getUnhandledProps(ButtonOr, props);\n  var ElementType = getElementType(ButtonOr, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes,\n    \"data-text\": text\n  }));\n}\n\nButtonOr.handledProps = [\"as\", \"className\", \"text\"];\nButtonOr.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Or buttons can have their text localized, or adjusted by using the text prop. */\n  text: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n} : {};\nexport default ButtonOr;","import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _invoke from \"lodash/invoke\";\nimport _isNil from \"lodash/isNil\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { Component, createRef } from 'react';\nimport Ref from '../../addons/Ref';\nimport { childrenUtils, customPropTypes, createShorthandFactory, getElementType, getUnhandledProps, SUI, useKeyOnly, useKeyOrValueAndKey, useValueAndKey } from '../../lib';\nimport Icon from '../Icon/Icon';\nimport Label from '../Label/Label';\nimport ButtonContent from './ButtonContent';\nimport ButtonGroup from './ButtonGroup';\nimport ButtonOr from './ButtonOr';\n/**\n * A Button indicates a possible user action.\n * @see Form\n * @see Icon\n * @see Label\n */\n\nvar Button =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Button, _Component);\n\n  function Button() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Button);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Button)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"ref\", createRef());\n\n    _defineProperty(_assertThisInitialized(_this), \"computeElementType\", function () {\n      var _this$props = _this.props,\n          attached = _this$props.attached,\n          label = _this$props.label;\n      if (!_isNil(attached) || !_isNil(label)) return 'div';\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"computeTabIndex\", function (ElementType) {\n      var _this$props2 = _this.props,\n          disabled = _this$props2.disabled,\n          tabIndex = _this$props2.tabIndex;\n      if (!_isNil(tabIndex)) return tabIndex;\n      if (disabled) return -1;\n      if (ElementType === 'div') return 0;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"focus\", function () {\n      return _invoke(_this.ref.current, 'focus');\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleClick\", function (e) {\n      var disabled = _this.props.disabled;\n\n      if (disabled) {\n        e.preventDefault();\n        return;\n      }\n\n      _invoke(_this.props, 'onClick', e, _this.props);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"hasIconClass\", function () {\n      var _this$props3 = _this.props,\n          labelPosition = _this$props3.labelPosition,\n          children = _this$props3.children,\n          content = _this$props3.content,\n          icon = _this$props3.icon;\n      if (icon === true) return true;\n      return icon && (labelPosition || childrenUtils.isNil(children) && _isNil(content));\n    });\n\n    return _this;\n  }\n\n  _createClass(Button, [{\n    key: \"computeButtonAriaRole\",\n    value: function computeButtonAriaRole(ElementType) {\n      var role = this.props.role;\n      if (!_isNil(role)) return role;\n      if (ElementType !== 'button') return 'button';\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props4 = this.props,\n          active = _this$props4.active,\n          animated = _this$props4.animated,\n          attached = _this$props4.attached,\n          basic = _this$props4.basic,\n          children = _this$props4.children,\n          circular = _this$props4.circular,\n          className = _this$props4.className,\n          color = _this$props4.color,\n          compact = _this$props4.compact,\n          content = _this$props4.content,\n          disabled = _this$props4.disabled,\n          floated = _this$props4.floated,\n          fluid = _this$props4.fluid,\n          icon = _this$props4.icon,\n          inverted = _this$props4.inverted,\n          label = _this$props4.label,\n          labelPosition = _this$props4.labelPosition,\n          loading = _this$props4.loading,\n          negative = _this$props4.negative,\n          positive = _this$props4.positive,\n          primary = _this$props4.primary,\n          secondary = _this$props4.secondary,\n          size = _this$props4.size,\n          toggle = _this$props4.toggle;\n      var baseClasses = cx(color, size, useKeyOnly(active, 'active'), useKeyOnly(basic, 'basic'), useKeyOnly(circular, 'circular'), useKeyOnly(compact, 'compact'), useKeyOnly(fluid, 'fluid'), useKeyOnly(this.hasIconClass(), 'icon'), useKeyOnly(inverted, 'inverted'), useKeyOnly(loading, 'loading'), useKeyOnly(negative, 'negative'), useKeyOnly(positive, 'positive'), useKeyOnly(primary, 'primary'), useKeyOnly(secondary, 'secondary'), useKeyOnly(toggle, 'toggle'), useKeyOrValueAndKey(animated, 'animated'), useKeyOrValueAndKey(attached, 'attached'));\n      var labeledClasses = cx(useKeyOrValueAndKey(labelPosition || !!label, 'labeled'));\n      var wrapperClasses = cx(useKeyOnly(disabled, 'disabled'), useValueAndKey(floated, 'floated'));\n      var rest = getUnhandledProps(Button, this.props);\n      var ElementType = getElementType(Button, this.props, this.computeElementType);\n      var tabIndex = this.computeTabIndex(ElementType);\n\n      if (!_isNil(label)) {\n        var buttonClasses = cx('ui', baseClasses, 'button', className);\n        var containerClasses = cx('ui', labeledClasses, 'button', className, wrapperClasses);\n        var labelElement = Label.create(label, {\n          defaultProps: {\n            basic: true,\n            pointing: labelPosition === 'left' ? 'right' : 'left'\n          },\n          autoGenerateKey: false\n        });\n        return React.createElement(ElementType, _extends({}, rest, {\n          className: containerClasses,\n          onClick: this.handleClick\n        }), labelPosition === 'left' && labelElement, React.createElement(Ref, {\n          innerRef: this.ref\n        }, React.createElement(\"button\", {\n          className: buttonClasses,\n          \"aria-pressed\": toggle ? !!active : undefined,\n          disabled: disabled,\n          tabIndex: tabIndex\n        }, Icon.create(icon, {\n          autoGenerateKey: false\n        }), \" \", content)), (labelPosition === 'right' || !labelPosition) && labelElement);\n      }\n\n      var classes = cx('ui', baseClasses, wrapperClasses, labeledClasses, 'button', className);\n      var hasChildren = !childrenUtils.isNil(children);\n      var role = this.computeButtonAriaRole(ElementType);\n      return React.createElement(Ref, {\n        innerRef: this.ref\n      }, React.createElement(ElementType, _extends({}, rest, {\n        className: classes,\n        \"aria-pressed\": toggle ? !!active : undefined,\n        disabled: disabled && ElementType === 'button' || undefined,\n        onClick: this.handleClick,\n        role: role,\n        tabIndex: tabIndex\n      }), hasChildren && children, !hasChildren && Icon.create(icon, {\n        autoGenerateKey: false\n      }), !hasChildren && content));\n    }\n  }]);\n\n  return Button;\n}(Component);\n\n_defineProperty(Button, \"defaultProps\", {\n  as: 'button'\n});\n\n_defineProperty(Button, \"Content\", ButtonContent);\n\n_defineProperty(Button, \"Group\", ButtonGroup);\n\n_defineProperty(Button, \"Or\", ButtonOr);\n\n_defineProperty(Button, \"handledProps\", [\"active\", \"animated\", \"as\", \"attached\", \"basic\", \"children\", \"circular\", \"className\", \"color\", \"compact\", \"content\", \"disabled\", \"floated\", \"fluid\", \"icon\", \"inverted\", \"label\", \"labelPosition\", \"loading\", \"negative\", \"onClick\", \"positive\", \"primary\", \"role\", \"secondary\", \"size\", \"tabIndex\", \"toggle\"]);\n\nButton.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** A button can show it is currently the active user selection. */\n  active: PropTypes.bool,\n\n  /** A button can animate to show hidden content. */\n  animated: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['fade', 'vertical'])]),\n\n  /** A button can be attached to other content. */\n  attached: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['left', 'right', 'top', 'bottom'])]),\n\n  /** A basic button is less pronounced. */\n  basic: PropTypes.bool,\n\n  /** Primary content. */\n  children: customPropTypes.every([PropTypes.node, customPropTypes.disallow(['label']), customPropTypes.givenProps({\n    icon: PropTypes.oneOfType([PropTypes.string.isRequired, PropTypes.object.isRequired, PropTypes.element.isRequired])\n  }, customPropTypes.disallow(['icon']))]),\n\n  /** A button can be circular. */\n  circular: PropTypes.bool,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A button can have different colors */\n  color: PropTypes.oneOf([].concat(_toConsumableArray(SUI.COLORS), ['facebook', 'google plus', 'instagram', 'linkedin', 'twitter', 'vk', 'youtube'])),\n\n  /** A button can reduce its padding to fit into tighter spaces. */\n  compact: PropTypes.bool,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A button can show it is currently unable to be interacted with. */\n  disabled: PropTypes.bool,\n\n  /** A button can be aligned to the left or right of its container. */\n  floated: PropTypes.oneOf(SUI.FLOATS),\n\n  /** A button can take the width of its container. */\n  fluid: PropTypes.bool,\n\n  /** Add an Icon by name, props object, or pass an <Icon />. */\n  icon: customPropTypes.some([PropTypes.bool, PropTypes.string, PropTypes.object, PropTypes.element]),\n\n  /** A button can be formatted to appear on dark backgrounds. */\n  inverted: PropTypes.bool,\n\n  /** Add a Label by text, props object, or pass a <Label />. */\n  label: customPropTypes.some([PropTypes.string, PropTypes.object, PropTypes.element]),\n\n  /** A labeled button can format a Label or Icon to appear on the left or right. */\n  labelPosition: PropTypes.oneOf(['right', 'left']),\n\n  /** A button can show a loading indicator. */\n  loading: PropTypes.bool,\n\n  /** A button can hint towards a negative consequence. */\n  negative: PropTypes.bool,\n\n  /**\n   * Called after user's click.\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props.\n   */\n  onClick: PropTypes.func,\n\n  /** A button can hint towards a positive consequence. */\n  positive: PropTypes.bool,\n\n  /** A button can be formatted to show different levels of emphasis. */\n  primary: PropTypes.bool,\n\n  /** The role of the HTML element. */\n  role: PropTypes.string,\n\n  /** A button can be formatted to show different levels of emphasis. */\n  secondary: PropTypes.bool,\n\n  /** A button can have different sizes. */\n  size: PropTypes.oneOf(SUI.SIZES),\n\n  /** A button can receive focus. */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /** A button can be formatted to toggle on and off. */\n  toggle: PropTypes.bool\n} : {};\nButton.create = createShorthandFactory(Button, function (value) {\n  return {\n    content: value\n  };\n});\nexport default Button;","import * as React from \"react\";\nimport { Link } from \"gatsby\";\nimport HeaderMenu from \"../components/HeaderMenu/HeaderMenu\";\nimport { withLayout, LayoutProps, menuItems } from \"../components/Layout\";\nimport {\n  Button,\n  Segment,\n  Container,\n  Grid,\n  Header,\n  Icon,\n} from \"semantic-ui-react\";\n\nconst IndexPage = (props: LayoutProps) =>\n  <div>\n    {/* Master head */}\n    <Segment vertical inverted textAlign=\"center\" className=\"masthead\">\n      <HeaderMenu\n        Link={Link} pathname={props.location.pathname} items={menuItems} inverted\n      />\n      <Container text>\n        <Header inverted as=\"h1\">Gaurav Prasad</Header>\n        <Header inverted as=\"h2\">Full Stack Developer</Header>\n        <Button  class=\"btn btn-lg btn-secondary fw-bold border-white bg-white\" size=\"huge\" onClick={()=>{window.open('https://linktr.ee/gauravprasad'); console.log(\"hello\")}}>Let's Connect!</Button>\n      </Container>\n    </Segment>\n\n    {/* About this starter */}\n    {/* <Segment vertical className=\"stripe\">\n      <Grid stackable verticalAlign=\"middle\" className=\"container\">\n        <Grid.Row>\n          <Grid.Column width=\"8\">\n            <Header>Lorem ipsum</Header>\n            <p>\n              Lorem ipsum dolor sit amet, consectetur adipisicing elit.\n                  Porro laudantium ad, quae, perspiciatis ipsa distinctio.\n                </p>\n            <Header>Dolor sit amet</Header>\n            <p>\n              Lorem ipsum dolor sit amet, consectetur adipisicing elit.\n                  Porro laudantium ad, quae, perspiciatis ipsa distinctio.\n                </p>\n          </Grid.Column>\n          <Grid.Column width=\"6\" floated=\"right\">\n          \n            <Header>Lorem ipsum</Header>\n            <p>\n              Lorem ipsum dolor sit amet, consectetur adipisicing elit.\n                  Porro laudantium ad, quae, perspiciatis ipsa distinctio.\n                </p>\n            <Header>Dolor sit amet</Header>\n            <p>\n              Lorem ipsum dolor sit amet, consectetur adipisicing elit.\n                  Porro laudantium ad, quae, perspiciatis ipsa distinctio.\n                </p>\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    </Segment>\n    \n    <Segment vertical className=\"stripe alternate feature\">\n      <Grid columns=\"3\" textAlign=\"center\" divided relaxed stackable className=\"container\">\n        <Grid.Row>\n          <Grid.Column>\n            <Header icon>\n              <Icon name=\"wizard\"></Icon>\n              A kind of magic!\n            </Header>\n            <p>\n              Lorem ipsum dolor sit amet, consectetur adipisicing elit.\n                  Voluptas eaque at quae cupiditate aspernatur quibusdam!\n                  Distinctio quod non, harum dolorum earum molestias,\n                  beatae expedita aliquam dolorem asperiores nemo amet quaerat.\n                </p>\n          </Grid.Column>\n          <Grid.Column>\n            <Header icon>\n              <Icon name=\"wizard\"></Icon>\n              A kind of magic!\n            </Header>\n            <p>\n              Lorem ipsum dolor sit amet, consectetur adipisicing elit.\n                  Voluptas eaque at quae cupiditate aspernatur quibusdam!\n                  Distinctio quod non, harum dolorum earum molestias,\n                  beatae expedita aliquam dolorem asperiores nemo amet quaerat.\n                </p>\n          </Grid.Column>\n          <Grid.Column>\n            <Header icon>\n              <Icon name=\"wizard\"></Icon>\n              A kind of magic!\n            </Header>\n            <p>\n              Lorem ipsum dolor sit amet, consectetur adipisicing elit.\n                  Voluptas eaque at quae cupiditate aspernatur quibusdam!\n                  Distinctio quod non, harum dolorum earum molestias,\n                  beatae expedita aliquam dolorem asperiores nemo amet quaerat.\n                </p>\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    </Segment> */}\n  </div>;\n\nexport default withLayout(IndexPage);\n","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;"],"sourceRoot":""}